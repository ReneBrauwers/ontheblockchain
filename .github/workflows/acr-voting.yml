name: CICD Voting Ledger App
on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths: ['src/VotingOnTheBlockChain/Voting/*']
env:
  IMAGE_NAME: voting-ledgernano
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Read version from file
        id: tag
        uses: juliangruber/read-file-action@v1
        with:
          path: src/VotingOnTheBlockChain/Voting/version.txt
      - name: Echo version.txt
        run: echo "${{ steps.tag.outputs.content }}"
      - name: Log into registry
        uses: azure/docker-login@v1        
        with:
          login-server: servian.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - run: |
          docker build src/VotingOnTheBlockChain/Voting/ -t servian.azurecr.io/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.content }}
          docker push servian.azurecr.io/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.content }}
    outputs:
      buildversion: ${{ steps.tag.outputs.content }}          
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_SERVIAN_1_MPN }}
      - name: Deploy to containerapp
        uses: azure/CLI@v1
        with:
          inlineScript: |
            echo "Installing containerapp extension"
            az config set extension.use_dynamic_install=yes_without_prompt
            echo "Create containerapp"
            az containerapp create -n ${{ env.IMAGE_NAME }} -g common --environment xrpl-environment \
            --image servian.azurecr.io/${{ env.IMAGE_NAME }}:${{ needs.build.outputs.buildversion }} \
            --cpu 0.5 --memory 1.0Gi \
            --min-replicas 0 --max-replicas 2 \
            --revision-suffix ${{ needs.build.outputs.buildversion }} \
            --target-port 3000 \
            --registry-server servian.azurecr.io \
            --registry-username ${{ secrets.AZURE_CREDENTIALS_SERVIAN_1_MPN.clientId }} \
            --registry-password ${{ secrets.AZURE_CREDENTIALS_SERVIAN_1_MPN.clientSecret }} \
            echo "Completed creation"
